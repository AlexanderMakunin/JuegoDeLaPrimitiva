name: Java CI with Gradle

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Compile (falla si hay errores)
        run: ./gradlew build

      - name: Run Checkstyle (Forzar ejecuci√≥n)
        id: checkstyle
        continue-on-error: true
        run: ./gradlew checkstyleMain --rerun-tasks

      - name: Convertir Checkstyle Report a Markdown
        id: format_checkstyle
        run: |
          echo "### üìù Checkstyle Report" > checkstyle_report.md
          echo "" >> checkstyle_report.md

          # Verifica si el reporte XML existe
          if [ -f build/reports/checkstyle/main.xml ]; then
            # Extrae errores del XML y los convierte a texto legible
            xmllint --xpath "//file/error" build/reports/checkstyle/main.xml 2>/dev/null | \
            sed -E 's/<error line="([0-9]+)".*message="([^"]+)".*/- **L√≠nea \1**: \2/g' >> checkstyle_report.md
          else
            echo "‚úÖ No se encontraron problemas de Checkstyle." >> checkstyle_report.md
          fi

      - name: Publicar Checkstyle Report en el Pull Request
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: checkstyle_report.md
          recreate: true  # Asegura que el comentario se actualice en lugar de crear varios nuevos
          ignore_empty: false  # No ignorar si el reporte est√° vac√≠o
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
