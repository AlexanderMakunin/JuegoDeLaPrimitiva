name: Java CI with Gradle

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Compile (falla si hay errores)
        run: ./gradlew build

      - name: Run Checkstyle (Forzar ejecución)
        id: checkstyle
        continue-on-error: true
        run: ./gradlew checkstyleMain --rerun-tasks

      - name: Verificar contenido del Checkstyle Report
        run: |
          echo "📂 Archivos en build/reports/checkstyle:"
          ls -l build/reports/checkstyle/
          echo "📄 Contenido de main.xml:"
          cat build/reports/checkstyle/main.xml || echo "⚠️ El archivo no existe o está vacío."

      - name: Convertir Checkstyle Report a Markdown Simple
        id: format_checkstyle
        run: |
          REPORT_FILE="build/reports/checkstyle/main.xml"
          OUTPUT_FILE="checkstyle_report.md"

          echo "### 📝 Checkstyle Report" > $OUTPUT_FILE

          if [ -f "$REPORT_FILE" ]; then
            ERRORS=$(grep '<error' $REPORT_FILE | wc -l)
            
            if [ "$ERRORS" -gt 0 ]; then
              echo -e "\n**$ERRORS problemas de estilo encontrados**\n" >> $OUTPUT_FILE
              
              # Método simplificado para asegurar que se muestren todos los errores
              echo -e "| Archivo | Línea | Problema |\n|---------|-------|----------|\n" >> $OUTPUT_FILE
              
              while read -r file_path; do
                file_name=$(basename "$file_path" | sed 's/.*name=\"\(.*\)\".*/\1/')
                
                grep -A 10 "name=\"$file_path\"" $REPORT_FILE | grep '<error' | while read -r error_line; do
                  line_num=$(echo "$error_line" | sed -E 's/.*line="([^"]+)".*/\1/')
                  message=$(echo "$error_line" | sed -E 's/.*message="([^"]+)".*/\1/' | sed 's/|/-/g')
                  
                  echo "| $file_name | $line_num | $message |" >> $OUTPUT_FILE
                done
              done < <(grep -o 'name="[^"]*"' $REPORT_FILE | sed 's/name="//' | sed 's/"//')
            else
              echo -e "\n✅ No se encontraron problemas de Checkstyle." >> $OUTPUT_FILE
            fi
          else
            echo -e "\n⚠️ No se encontró el archivo de reporte de Checkstyle." >> $OUTPUT_FILE
          fi
          
          # Imprimir el contenido del informe para verificar
          echo "Contenido del informe generado:"
          cat $OUTPUT_FILE

      - name: Publicar Checkstyle Report en el Pull Request
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: checkstyle_report.md
          recreate: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
